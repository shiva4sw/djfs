<h2>Introduction to Django Framework</h2>

<dl>
  <dt>1. What is Django?</dt>
  <dd>
    Django is a high-level, open-source Python web framework that encourages rapid development and clean, pragmatic design.
  </dd>

  <dt>2. Key Features</dt>
  <dd>
    <ul>
      <li><strong>MTV Architecture:</strong> Model-Template-View pattern, similar to MVC.</li>
      <li><strong>ORM (Object-Relational Mapping):</strong> Interact with databases using Python classes instead of SQL.</li>
      <li><strong>Admin Interface:</strong> Automatically generated admin dashboard to manage site content.</li>
      <li><strong>Built-in Authentication:</strong> User login, logout, password management.</li>
      <li><strong>URL Routing:</strong> Clean and readable URLs.</li>
      <li><strong>Scalability & Security:</strong> Protection against common vulnerabilities (CSRF, SQL injection, XSS).</li>
      <li><strong>Extensive Documentation and Community:</strong> Well-documented with many reusable packages.</li>
    </ul>
  </dd>

  <dt>3. When to Use Django?</dt>
  <dd>
    Ideal for building robust, scalable web applications quickly, such as content management systems, e-commerce sites, social networks, and APIs.
  </dd>

  <dt>4. Basic Workflow</dt>
  <dd>
    <ol>
      <li>Create a project.</li>
      <li>Define models to structure data.</li>
      <li>Create views to handle requests.</li>
      <li>Design templates for UI.</li>
      <li>Configure URL routing.</li>
      <li>Use the built-in admin to manage content.</li>
    </ol>
  </dd>

  <dt>5. Popular Django Projects</dt>
  <dd>
    Instagram, Pinterest (early versions), Disqus, Mozilla, The Washington Post.
  </dd>
</dl>
