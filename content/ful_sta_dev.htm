<h2>Full Stack Development</h2>

<dl>
  <dt>1. What is Full Stack Development?</dt>
  <dd>
    Development that covers both <strong>frontend</strong> (client-side) and <strong>backend</strong> (server-side) parts of a web application, including databases, servers, APIs, and UI.
  </dd>

  <dt>2. Frontend (Client-Side)</dt>
  <dd>
    Technologies that run in the browser to create the user interface:<br>
    <ul>
      <li>HTML - structure</li>
      <li>CSS - styling</li>
      <li>JavaScript - interactivity</li>
      <li>Frameworks/Libraries: React, Angular, Vue.js</li>
      <li>Tools: Webpack, Vite, Babel</li>
    </ul>
  </dd>

  <dt>3. Backend (Server-Side)</dt>
  <dd>
    Handles business logic, database operations, authentication, API endpoints:<br>
    <ul>
      <li>Languages: Python (Django, Flask), JavaScript (Node.js/Express), Java (Spring), Ruby (Rails), PHP (Laravel)</li>
      <li>Databases: MySQL, PostgreSQL, MongoDB</li>
      <li>APIs: REST, GraphQL</li>
    </ul>
  </dd>

  <dt>4. Database</dt>
  <dd>
    Stores and manages data:<br>
    <ul>
      <li>Relational DBs: MySQL, PostgreSQL, SQLite</li>
      <li>NoSQL DBs: MongoDB, Cassandra</li>
    </ul>
  </dd>

  <dt>5. DevOps and Deployment</dt>
  <dd>
    Managing deployment, scaling, and maintenance:<br>
    <ul>
      <li>Servers: AWS, Azure, DigitalOcean</li>
      <li>Containerization: Docker</li>
      <li>CI/CD pipelines: GitHub Actions, Jenkins</li>
      <li>Web servers: Nginx, Apache</li>
    </ul>
  </dd>

  <dt>6. Example Full Stack Tech Stack</dt>
  <dd>
    <strong>MERN Stack</strong>: MongoDB (DB), Express.js (Backend), React.js (Frontend), Node.js (Runtime)<br>
    <strong>Python/Django + React</strong>: Django REST API backend with React frontend<br>
    <strong>LAMP Stack</strong>: Linux, Apache, MySQL, PHP
  </dd>

  <dt>7. Full Stack Development Workflow</dt>
  <dd>
    <ol>
      <li>Design UI/UX (frontend)</li>
      <li>Develop frontend components</li>
      <li>Build backend API and business logic</li>
      <li>Connect frontend to backend via API calls</li>
      <li>Test, deploy, and monitor</li>
    </ol>
  </dd>
</dl>
